// Code generated by MockGen. DO NOT EDIT.
// Source: internal/services/format_float.go

// Package pdf is a generated GoMock package.
package pdf

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFormatFloatInterface is a mock of FormatFloatInterface interface.
type MockFormatFloatInterface struct {
	ctrl     *gomock.Controller
	recorder *MockFormatFloatInterfaceMockRecorder
}

// MockFormatFloatInterfaceMockRecorder is the mock recorder for MockFormatFloatInterface.
type MockFormatFloatInterfaceMockRecorder struct {
	mock *MockFormatFloatInterface
}

// NewMockFormatFloatInterface creates a new mock instance.
func NewMockFormatFloatInterface(ctrl *gomock.Controller) *MockFormatFloatInterface {
	mock := &MockFormatFloatInterface{ctrl: ctrl}
	mock.recorder = &MockFormatFloatInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFormatFloatInterface) EXPECT() *MockFormatFloatInterfaceMockRecorder {
	return m.recorder
}

// Float32ToString mocks base method.
func (m *MockFormatFloatInterface) Float32ToString(value float32) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Float32ToString", value)
	ret0, _ := ret[0].(string)
	return ret0
}

// Float32ToString indicates an expected call of Float32ToString.
func (mr *MockFormatFloatInterfaceMockRecorder) Float32ToString(value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Float32ToString", reflect.TypeOf((*MockFormatFloatInterface)(nil).Float32ToString), value)
}
