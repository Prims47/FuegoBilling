// Code generated by MockGen. DO NOT EDIT.
// Source: internal/adapter/service_adapter_interface.go

// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"

	adapter "fuegobyp-billing.com/internal/adapter"
	gomock "github.com/golang/mock/gomock"
)

// MockServiceAdapterInterface is a mock of ServiceAdapterInterface interface.
type MockServiceAdapterInterface struct {
	ctrl     *gomock.Controller
	recorder *MockServiceAdapterInterfaceMockRecorder
}

// MockServiceAdapterInterfaceMockRecorder is the mock recorder for MockServiceAdapterInterface.
type MockServiceAdapterInterfaceMockRecorder struct {
	mock *MockServiceAdapterInterface
}

// NewMockServiceAdapterInterface creates a new mock instance.
func NewMockServiceAdapterInterface(ctrl *gomock.Controller) *MockServiceAdapterInterface {
	mock := &MockServiceAdapterInterface{ctrl: ctrl}
	mock.recorder = &MockServiceAdapterInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceAdapterInterface) EXPECT() *MockServiceAdapterInterfaceMockRecorder {
	return m.recorder
}

// Request mocks base method.
func (m *MockServiceAdapterInterface) Request(id string) (adapter.ServiceAdapterResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Request", id)
	ret0, _ := ret[0].(adapter.ServiceAdapterResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Request indicates an expected call of Request.
func (mr *MockServiceAdapterInterfaceMockRecorder) Request(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Request", reflect.TypeOf((*MockServiceAdapterInterface)(nil).Request), id)
}
