// Code generated by MockGen. DO NOT EDIT.
// Source: internal/adapter/account_adapter_interface.go

// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	adapter "github.com/prims47/FuegoBilling/internal/adapter"
)

// MockAccountAdapterInterface is a mock of AccountAdapterInterface interface.
type MockAccountAdapterInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAccountAdapterInterfaceMockRecorder
}

// MockAccountAdapterInterfaceMockRecorder is the mock recorder for MockAccountAdapterInterface.
type MockAccountAdapterInterfaceMockRecorder struct {
	mock *MockAccountAdapterInterface
}

// NewMockAccountAdapterInterface creates a new mock instance.
func NewMockAccountAdapterInterface(ctrl *gomock.Controller) *MockAccountAdapterInterface {
	mock := &MockAccountAdapterInterface{ctrl: ctrl}
	mock.recorder = &MockAccountAdapterInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountAdapterInterface) EXPECT() *MockAccountAdapterInterfaceMockRecorder {
	return m.recorder
}

// Request mocks base method.
func (m *MockAccountAdapterInterface) Request(id string) (adapter.AccountAdapterResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Request", id)
	ret0, _ := ret[0].(adapter.AccountAdapterResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Request indicates an expected call of Request.
func (mr *MockAccountAdapterInterfaceMockRecorder) Request(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Request", reflect.TypeOf((*MockAccountAdapterInterface)(nil).Request), id)
}
