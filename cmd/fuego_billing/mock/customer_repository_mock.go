// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repository/customer_repository_interface.go

// Package cmd is a generated GoMock package.
package cmd

import (
	reflect "reflect"

	model "fuegobyp-billing.com/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockCustomerRepositoryInterface is a mock of CustomerRepositoryInterface interface.
type MockCustomerRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCustomerRepositoryInterfaceMockRecorder
}

// MockCustomerRepositoryInterfaceMockRecorder is the mock recorder for MockCustomerRepositoryInterface.
type MockCustomerRepositoryInterfaceMockRecorder struct {
	mock *MockCustomerRepositoryInterface
}

// NewMockCustomerRepositoryInterface creates a new mock instance.
func NewMockCustomerRepositoryInterface(ctrl *gomock.Controller) *MockCustomerRepositoryInterface {
	mock := &MockCustomerRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockCustomerRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomerRepositoryInterface) EXPECT() *MockCustomerRepositoryInterfaceMockRecorder {
	return m.recorder
}

// Request mocks base method.
func (m *MockCustomerRepositoryInterface) Request(id string) (model.Customer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Request", id)
	ret0, _ := ret[0].(model.Customer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Request indicates an expected call of Request.
func (mr *MockCustomerRepositoryInterfaceMockRecorder) Request(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Request", reflect.TypeOf((*MockCustomerRepositoryInterface)(nil).Request), id)
}
